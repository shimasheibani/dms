name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # üèóÔ∏è Build Stage
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package -s settings.xml --batch-mode --errors --fail-at-end

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: application-jar
          path: target/*.jar

  # ‚úÖ Test Stage
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run tests
        run: mvn test -s settings.xml --batch-mode --errors --fail-at-end

  # üê≥ Dockerize Stage (Build & Push Docker Image)
  dockerize:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u USERNAME --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/YOUR_GITHUB_USERNAME/YOUR_PROJECT:latest .
          docker push ghcr.io/YOUR_GITHUB_USERNAME/YOUR_PROJECT:latest

  # üöÄ Deploy Stage
  deploy:
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ghcr.io/YOUR_GITHUB_USERNAME/YOUR_PROJECT:latest
            docker-compose up -d
